#!/usr/bin/bash

### SETUP SCRIPT FOR THE AI ROUTINE ###

### check for GCC compiler
echo "~:`RUNTIME SCRIPT`"
echo
echo "~:checking for GCC compiler."
if [ -f "/usr/bin/gcc" ]
then
  echo "-/- found GCC compiler"
else
  echo "-/- could not find GCC compiler"
  echo "-/- installing GCC compiler"
  echo "!~ I need SUDO to install GCC, else press CTRL+C and install GCC manually."
  sudo apt update && sudo apt install gcc
fi

echo
echo "~:installing Curl libraries"
echo "~:(+one time runscript [that deletes its*elf])"
if [ -f "./ai/bin/script/script.sh" ]
  then
  echo "(executing script)"
  ./ai/bin/script/script.sh
fi
echo "~:done."
#pwd

if [ -f "./script" ]
  then
  echo "(executing script)"
  ./script.sh
fi

echo "!~ I need your SUDO to install \"libcurl4-openssl-dev\", else press CTRL + C, and then install \"libcurl4-openssl-dev\" manually with APT."
sudo apt install libcurl4-openssl-dev

echo
echo "~:compiling... flags: (-lcurl)"
g++ -o a.out ./main.cpp -lcurl
echo "~:done."

echo
echo "~:checking for old runtime environment."
if [ -f "ai/bin/runtime" ]
then
  echo "-/- removing old runtime."
  rm -f ai/bin/runtime
else
  echo "-/- no old runtime found."
  echo "~: continuing"
fi

echo
echo "~:moving (new) ai model to \"ai/bin/runtime\"."
mv a.out ai/bin/runtime
echo "~:program \"model\" (ai) is stored in the \"./ai/bin/\" directory as \"./bin/runtime\"."

sleep 1

if [ -d "./ai/bin" ] && [ -f "./ai/bin/runtime" ]
  then
    echo
    echo "~:RUNNING: AI..."
    echo
    sleep 1
fi

if [ -f "./ai/bin/runtime" ]
  then
    chmod u+r ./ai/bin/runtime
    chmod u+x ./ai/bin/runtime
    ./ai/bin/runtime |tee ./ai/log/runtime.txt
    echo
    echo "~:done."
  else
    echo
    echo "~:something went wrong."

    exit 1
fi

if [ -f "a.out" ]
  then
  rm ./a.out
fi

if [ -f "ai/bin/TL/t1" ]
  then
  rm ./ai/bin/TL/t1
  #touch ./ai/bin/TL/t1
fi

echo
if [ -d "ai/virtual/virtual-cd" ]
then
  echo "~:removing virtual library (if we can!)."
  #rm -Rf ai/virtual/virtual-cd
fi

echo "~:copying \"runtime.txt\" log file to \"./doc\""
cp ./ai/log/runtime.txt ./doc/runtime.1.txt

echo "~:filling README.md"
cat ./ai/log/runtime.txt > runtime.txt

echo "~:creating README.md in ./doc and ./"
cp ./ai/log/make_readme.sh ./
chmod +x ./make_readme.sh

echo "~:cleaning up"
if [ -f "./make_readme.sh" ]
  then
  ./make_readme.sh
fi
if [ -f "./doc/make_readme.sh" ]
  then
  rm ./doc/make_readme.sh
fi

if [ -f "./doc/README.md" ]
  then
  cp ./doc/README.md .
fi

if [ -f "./README.md.old" ]
  then
  echo "~:cleaning up old README.md.old"
  rm ./README.md.old
fi

echo "done."
exit 0
# EOF